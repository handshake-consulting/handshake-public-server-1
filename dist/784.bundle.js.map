{"version":3,"file":"784.bundle.js","mappings":"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","sources":["webpack://ask give.org chatbot package/./src/constant.js","webpack://ask give.org chatbot package/./src/homePage.js","webpack://ask give.org chatbot package/./src/utils.js"],"sourcesContent":["export const BASEURL = \"https://chat-r-cloudrun-service-kxg2k75u7a-uc.a.run.app\";\n\n\nexport const FAQS = [\n  {\n    question: \"Who made this chatbot?\",\n    answer: \"The chatbot is a project of give.org, also known as the BBB Wise Giving Alliance, which is a standards-based charity evaluator that verifies the trustworthiness of publicly soliciting charities by completing rigorous evaluations based on BBB standards for charity accountability. The chatbot was also made in partnership with Handshake, a generative AI consultancy.\"\n  },\n  {\n    question: \"What is the purpose of the chatbot?\",\n    answer: \"The purpose of the chatbot is to help you easily access and interact with the many reports, podcasts, blogs, videos, and other content created and hosted by Give.org about how to trust charities, and general advice on giving and philanthropy.\"\n  },\n  {\n    question: \"What should users know about the chatbot?\",\n    answer: \"Users should understand that this is an early stage technology and there are going to be mistakes. We ask for your collaboration in helping us improve the chatbot by sharing your experience in the feedback slot.\"\n  },\n  {\n    question: \"Does give.org store data from the chatbot?\",\n    answer: \"Yes, give.org stores all data from this chatbot permanently to understand how people are using this new technology, and how to improve the service.\"\n  },\n  {\n    question: \"Is the chatbot intended to make direct suggestions about what charity to donate to?\",\n    answer: \"No, the chatbot is not intended to make any direct suggestions about what charity to donate to. It's only meant to give general information about charities, philanthropy, or giving based on the information that give.org already publicly offers on its website.\"\n  },\n  {\n    question: \"Can the bot answer quantitative questions?\",\n    answer: \"No, the bot cannot answer questions quantitatively. For example, if you ask it something like, \\\"How many charities in the give.org database are there that have to do with animal rights?\\\" it won't be able to answer this.\"\n  },\n  {\n    question: \"What should users do if they suspect the chatbot is providing inaccurate or malformed information?\",\n    answer: \"As the chatbot uses generative AI, it is possible for it to generate information on its own by accident. If you suspect that something is inaccurate or malformed, please use the \\\"Report\\\" feature on the chatbot and provide details on the issue. you should take a screenshot and report it to Jeremy at handshake.fyi.\"\n  },\n  {\n    question: \"Does the give.org bot contain all the information found in the charity reports on give.org?\",\n    answer: \"No, the give.org bot does not contain all of the information that can be found in the charity reports on give.org. People are encouraged to also check out the give.org charity reports directly after using the bot.\"\n  },\n  {\n    question: \"What AI is the give.org chatbot built on?\",\n    answer: \"The give.org chatbot is built on top of Anthropic's Claude 3 Sonnet model, along with custom tooling built by Handshake for give.org.\"\n  },\n  {\n    question: \"Does Anthropic store any data from the chatbot?\",\n    answer: \"No, Anthropic does not store any data permanently. They keep the data put into the bot for 28 days for debugging purposes and then delete it. It is never used to train any AI models.\"\n  }\n];","/* eslint-disable no-constant-condition */\nimport { BASEURL } from \"./constant\";\nimport {  appendAction,loadDataFromSession,storeValueInSession,appendReferences,appendBotMessage, typewords ,appendUserMessage,appendBotDiv ,mobileChat, generateAndStoreUUID, readValueFromSession, ListentoModal} from \"./utils\";\n\nlet abortController = new AbortController()\nlet next_session = \"\"\nlet containterid = \"gb-chatbody\"\n\nexport default function initHomePage() {\n  // console.log('Initializing home page logic');\n\n\n\n\n\n  // openModal();\n  // scrollToDiv('gb-bot-scrolldown')\n\n  if(!readValueFromSession('username')){\n    generateAndStoreUUID('username')\n    generateAndStoreUUID('chat_session')\n   }\n\n\n  \n  \n  // appendUserMessage('Tell me about animal charities that specifically help seals and turtles')\n\n\n  // appendBotDiv('I am a chatbot. How can I help you?')\n  // appendReferences()\n  // appendAction()\n  mobileChat()\n\n\n\n\n\n\n// Check view mode on page load\nwindow.addEventListener('load', checkViewMode);\n\n// Check view mode when the window is resized\n// window.addEventListener('resize', checkViewMode);\n\n// faqshower()\n\n\n// LoadFAQs()\n\nListentoModal()\n\n\n\n\n}\n\n// let currentViewMode = null;\n\nfunction checkViewMode() {\n  loadDataFromSession(containterid);\n  // const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n  // const newViewMode = screenWidth <= 768 ? 'mobile' : 'desktop';\n\n  // if (newViewMode !== currentViewMode) {\n  //   currentViewMode = newViewMode;\n  //   containterid = newViewMode === 'mobile' ? 'gb-mobile' : 'gb-chatbody';\n  //   document.getElementById(containterid).innerHTML = '';\n  //   loadDataFromSession(containterid);\n  // }\n  // console.log(containterid);\n  // const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n  // if (screenWidth <= 768) {\n  //   containterid = 'gb-mobile'\n  //   document.getElementById('gb-mobile').innerHTML = '';\n  //   loadDataFromSession('gb-mobile')\n\n  //   //console.log('Mobile View');\n  //   // Perform actions specific to mobile view\n  // } else {\n  //   // console.log('Desktop View');\n  //   containterid = 'gb-chatbody'\n  //   document.getElementById('gb-chatbody').innerHTML = '';\n    \n\n  //   loadDataFromSession('gb-chatbody')\n  //   // Perform actions specific to desktop view\n  // }\n\n\n  const gbForm = document.getElementById('gb-form-' + containterid);\n  const gbSubmitBtn = document.getElementById('gb-submit-btn-' + containterid);\n  const gbTextarea = gbForm.querySelector('textarea[name=\"chat\"]');\n  \n  // Add event listener to submit button\n  gbSubmitBtn.addEventListener('click', async (event) => {\n    event.preventDefault();\n    // console.log('Clicked me');\n    // scrollToDiv('gb-bot-scrolldown');\n    const inputText = gbTextarea.value;\n  \n    // Disable the submit button and textarea\n    gbSubmitBtn.disabled = true;\n    gbTextarea.disabled = true;\n  \n    await makeRequest(inputText);\n  \n    // Clear the textarea value\n    gbTextarea.value = \"\";\n  \n    // Re-enable the submit button and textarea\n    gbSubmitBtn.disabled = false;\n    gbTextarea.disabled = false;\n  });\n  // Home page specific JavaScript here\n  typewords(containterid);\n\n  const newChat = document.getElementById('gb-resetchat-'+containterid);\n\n  newChat.onclick = (e)=>{\n    e.preventDefault()\n    resetChat()\n   // console.log(\"you clicked\");\n  }\n\n}\n\nexport const makeRequest = async (message,route,next_message) => {\n  abortController = new AbortController();\n  if (message.trim().length === 0) {\n    alert('Please enter a message');\n    return;\n  }\n\n  setLoader(true, containterid);\n  document.getElementById('gb-chatbot-scrolldown-'+containterid).scrollIntoView({ behavior: 'smooth', block: 'end' });\n  const newId = Date.now().toString();\n  try {\n    const response = await fetch(route ===\"retry\"? BASEURL+\"/retry\" :BASEURL+\"/submit\", {\n      method: \"POST\",\n      body: JSON.stringify(\n        {\n        message: message,\n        chat_session: readValueFromSession('chat_session'),\n        username: readValueFromSession('username'),\n        next_message:  route ===\"retry\"? next_message : next_session\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      signal: abortController.signal,\n    });\n\n    if (!response.ok) {\n      const json = await response.text();\n      throw new Error(json);\n    }\n\n    const data = response.body;\n    if (!data) {\n      return;\n    }\n\n    const reader = data.pipeThrough(new TextDecoderStream()).getReader();\n\n    let botResponseText = \"\";\n\n    appendUserMessage(message, newId, containterid);\n    appendBotDiv(botResponseText, newId, containterid);\n    let botFlex = document.getElementById(\"botFlex-1-\"+newId + \"-\" + containterid);\n\n    appendBotMessage(botFlex, newId, containterid);\n\n    storeValueInSession(`user_message_${newId}`, message);\n\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        const botRefer = document.createElement('div');\n        botRefer.className = \"gb-mt-2 gb-px-4 gb-flex gb-flex-col gb-space-y-3 gb-bot-references\";\n        botRefer.id=\"botRef-1-\"+newId + \"-\" + containterid\n        botFlex.appendChild(botRefer);\n\n        await makeReference(message, newId);\n        setLoader(false, containterid);\n        break;\n      }\n\n      botResponseText += value;\n\n      let messageParagraph = document.getElementById(newId + \"-\" + containterid);\n      messageParagraph.innerHTML = window.marked.parse(botResponseText);\n      botFlex.appendChild(messageParagraph);\n      document.getElementById('gb-chatbot-scrolldown-'+containterid).scrollIntoView({ behavior: 'smooth', block: 'end' });\n      storeValueInSession(`bot_response_${newId}`, botResponseText);\n    }\n  } catch (error) {\n    console.log(\"Error:\", error);\n    if (error.name === \"AbortError\") {\n      setLoader(false, containterid);\n    } else {\n      setLoader(false, containterid);\n      console.error(\"Error:\", error);\n    }\n  }\n};\n\nconst makeReference = async (userprompt, newId)=>{\n  try {\n   const response = await fetch(BASEURL + \"/content\", {\n     method: \"POST\",\n     body: JSON.stringify({\n       message: userprompt,\n       chat_session:readValueFromSession('chat_session'),\n       username:readValueFromSession('username'),\n       next_message: next_session\n       // token:this.token,\n     }),\n     headers: {\n       \"Content-Type\": \"application/json\",\n       \"accept\":\"application/json\"\n     },\n   });\n   const data = await response.json();\n  //     console.log(data);\n  // console.log(newId);\n   const dataresp = await JSON.parse(data);\n  // console.log(JSON.parse(data))\n  // console.log(dataresp);\n   if (dataresp.output !== \"\") {\n     // console.log(dataresp.keyword_replacements.prompt.documentcontent[0]);\n     // this.refcontent = dataresp.queries.content[0];\n     // this.reference =\n     //   \"Selected Source From : \" + dataresp.queries.title[0];\n     //this.refurl =  dataresp.keyword_replacements.prompt.url[0]\n     //  await this.fetchFavicon(this.refurl)\n     next_session = dataresp.next_node\n     const searchDatas = dataresp.queries;\n  \n     storeValueInSession(`next_message_${newId}`, next_session);\n  \n     // Ensure that there is at least one key with an array to determine the length\n     if (\n       Object.keys(searchDatas).length === 0 ||\n       searchDatas.url.length === 0\n     ) {\n       throw new Error(\"No data available\");\n     }\n  \n     const formattedData = searchDatas.url.map((_, index) => {\n  \n  \n       appendReferences(newId, {\n         id: newId,\n         title: searchDatas.title[index],\n         content: searchDatas.content[index],\n         date: searchDatas.date[index],\n         url: searchDatas.url[index],\n       },containterid )\n  \n  \n       // const newId = /* generate your new ID here */;\n       return {\n         id: newId,\n         title: searchDatas.title[index],\n         content: searchDatas.content[index],\n         date: searchDatas.date[index],\n         url: searchDatas.url[index],\n         // Uncomment and complete the following line if needed\n         // faviconUrl: await fetchFavicon(searchDatas.url[index])\n       };\n     });\n     \n  \n    // console.log(\"Formatted Data:\", formattedData);\n     //console.log('Formatted Data', formattedData);\n     // this.searchedFrom.push(...formattedData);\n     storeValueInSession(`reference_data_${newId}`, JSON.stringify(formattedData));\n    \n   }\n  } catch (error) {\n   console.error(\"Error:\", error);\n  }finally{\n       //  appendReferences(newId)\n       appendAction(newId, containterid)\n  }\n  }\n\n\n// async function fetchFavicon(url) {\n//   console.log('Fetching favicon for:', url);\n//   let faviconUr;\n//   // try {\n//     const response = await fetch(BASEURL+`/favicon`,{\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"accept\":\"application/json\"\n//       },\n//       body: JSON.stringify({\n//         url: getBaseURL(url),\n//       }),\n//     });\n//     const data = await response.json();\n\n//     if (data.faviconUrl) {\n//       faviconUr = data.faviconUrl;\n//     } else {\n//       faviconUr = \"https://give.org/favicon.ico\";\n//       //  console.error('No favicon found.');\n//     }\n//   // }\n  \n//   // catch (error) {\n//   //   faviconUr = \"https://give.org/favicon.ico\";\n//   //    console.error('Error fetching favicon:', error);\n//   // }\n\n//   console.log('Favicon URL:', faviconUr);\n//   return faviconUr;\n// }\n\nconst resetChat = ()=>{\n  // removeSessionItem('chat_session')\n  generateAndStoreUUID('chat_session')\n  document.getElementById(containterid).innerHTML = '';\n  next_session = null\n\n  // Clear user_message_* sessions\n  const userMessageKeys = Object.keys(sessionStorage).filter(key => key.startsWith('user_message_'));\n  userMessageKeys.forEach(key => {\n    sessionStorage.removeItem(key);\n  });\n\n  // Clear next_message_* sessions\n  const nextMessageKeys = Object.keys(sessionStorage).filter(key => key.startsWith('next_message_'));\n  nextMessageKeys.forEach(key => {\n    sessionStorage.removeItem(key);\n  });    \n\n  // Clear bot_response_* sessions\n  const botResponseKeys = Object.keys(sessionStorage).filter(key => key.startsWith('bot_response_'));\n  botResponseKeys.forEach(key => {\n    sessionStorage.removeItem(key);\n  });\n\n  // Clear reference_data_* sessions\n  const referenceDataKeys = Object.keys(sessionStorage).filter(key => key.startsWith('reference_data_'));\n  referenceDataKeys.forEach(key => {\n    sessionStorage.removeItem(key);\n  });\n\n  location.reload();\n\n}\n\n\nfunction setLoader(on,id){\n  const gbloader = document.getElementById('gb-chatbot-loader-'+id);\n  const gbsubbutton = document.getElementById('gb-submit-icon-'+id);\n  const gbbuttonloader = document.getElementById('gb-submit-loading-'+id);\n  if(on){\n    gbloader.classList.remove(\"gb-hidden\");\n    gbsubbutton.classList.add(\"gb-hidden\");\n    gbbuttonloader.classList.remove(\"gb-hidden\");\n  }else{\n    gbloader.classList.add(\"gb-hidden\");\n    gbsubbutton.classList.remove(\"gb-hidden\");\n    gbbuttonloader.classList.add(\"gb-hidden\");\n  }\n\n}\n\n\n\n","import { BASEURL, FAQS } from \"./constant\"\nimport { makeRequest } from \"./homePage\"\n\n/* eslint-disable no-prototype-builtins */\nlet displayText = ''\nlet words = ['Generating', 'Gathering', 'Researching']\nlet currentWordIndex = 0\nconst typingSpeed = 150\nconst deletingSpeed = 100\nconst pauseDuration = 1000\n\nexport function appendUserMessage(message,id,containterid) {\n  const chatContainer = document.getElementById(containterid);\n  const userDiv = document.createElement('div');\n  userDiv.className = 'gb-p-4 gb-mt-5 gb-bg-reply-gradient gb-text-white gb-rounded ';\n  userDiv.id = \"gb-user-\"+id+\"-\"+containterid;\n  \n  // Create a <p> element\n  const messageParagraph = document.createElement('p');\n  // Set its text content to the message\n  messageParagraph.textContent = message;\n  // Append the <p> element to the userDiv\n  userDiv.appendChild(messageParagraph);\n  \n  // Append the userDiv to the chatContainer\n  chatContainer.appendChild(userDiv);\n\n}\n\nexport function appendBotDiv(message, id, containterid) {\n// Create bot message container and image outside the function\nconst chatContainer = document.getElementById(containterid);\nconst botDiv = document.createElement('div');\nbotDiv.className = 'gb-mt-5';\nbotDiv.id = \"gb-bot-\"+id+\"-\"+containterid;\nconst img = document.createElement('img');\nimg.src = \"/sf-images/default-source/giving-coach-ai/giveorgbfeacd32d46e4cb6884e4af525762179.png?Status=Master&sfvrsn=218481fd_2\";\nimg.className = \"gb-w-[59.47px]  gb-rounded-[10px]\"\nbotDiv.appendChild(img);\nconst botFlex = document.createElement('div');\nbotFlex.id=\"botFlex-1-\"+id+\"-\"+containterid\nbotFlex.className = \"gb-bg-[#ffff] gb-rounded \"\n\nbotDiv.appendChild(botFlex);\nchatContainer.appendChild(botDiv);\n\n// appendBotMessage(botFlex, message);\n// const botRefer = document.createElement('div');\n// botRefer.id=\"botRef-1\"\n// botRefer.className = \"gb-mt-2 gb-px-4 gb-flex gb-flex-wrap gb-space-x-0 md:gb-space-x-3\"\n// botFlex.appendChild(botRefer);\n\n}\n\n\nexport function appendBotMessage(botDiv,newId, containterid) {\n  // Create a <p> element\n  const messageParagraph = document.createElement('p');\n  messageParagraph.className = 'gb-p-4 gb-bg-[#ffff] gb-my-5 gb-rounded gb-whitespace-pre-wrap';\n  // Set its text content to the message\n  // messageParagraph.textContent = message;\n  messageParagraph.id = newId + \"-\" + containterid;\n  // Append the <p> element to the botDiv\n  botDiv.appendChild(messageParagraph);\n}\n\n\nexport function appendReferences(newId, data, containterid){\n // console.log(data);\n  const botContainer = document.getElementById('botRef-1-'+newId+'-'+containterid);\n//  console.log(botContainer);\n  const referenceLink = document.createElement('a');\n  referenceLink.href = data.url;\n  referenceLink.target = \"_blank\";\n\n  const spanLink = document.createElement('span');\n  spanLink.className = \"gb-bg-[#FFD368] gb-space-x-2 gb-no-underline gb-hover:underline gb-text-xs gb-font-medium gb-inline-flex gb-items-center gb-px-2.5 gb-py-0.5 gb-rounded-lg\";\n  \n\n  const referenceImg = document.createElement('img');\n  referenceImg.src = \"/sf-images/default-source/giving-coach-ai/book.png?Status=Temp&sfvrsn=5dc9ba90_2\";\n  referenceImg.width =17\n  referenceImg.height = 16\n  spanLink.appendChild(referenceImg);\n \n\n  const referenceText = document.createElement('p');\n  referenceText.textContent = data.title;\n  referenceText.className=\"hover:gb-underline gb-m-0 gb-text-black\"\n\n  spanLink.appendChild(referenceText);\n\n\n\n  referenceLink.appendChild(spanLink);\n\n\n\n  botContainer.appendChild(referenceLink);\n  // botContainer.appendChild(messageActionsDiv);\n}\n\nexport function appendAction(newId,containterid){\n  // Actions \nconst botContainer = document.getElementById('botFlex-1-'+newId +'-'+containterid);\nconst messageActionsDiv = document.createElement('div');\nmessageActionsDiv.className = \"gb-px-4 gb-my-2 gb-pb-3\"\nmessageActionsDiv.id=\"gb-message-actions-\"+newId+'-'+containterid\n\n// Reload button\nconst reloadActionsButton = document.createElement('button');\nreloadActionsButton.className = \"hover:gb-bg-[#E4E4E4] gb-p-2.5 gb-rounded-full\";\nconst reloadImg = document.createElement('img');\nreloadImg.src = \"/sf-images/default-source/giving-coach-ai/reload.png?Status=Temp&sfvrsn=37de681e_2\";\nreloadActionsButton.appendChild(reloadImg);\nreloadActionsButton.id=\"gb-message-actions-1-\"+newId+'-'+containterid\nreloadActionsButton.addEventListener('click', () => handleRetry(newId ,newId+'-'+containterid));\nmessageActionsDiv.appendChild(reloadActionsButton);\n\n    // Report button\n    const reportActionsButton = document.createElement('button');\n    reportActionsButton.className = \"hover:gb-bg-[#E4E4E4] gb-p-2.5 gb-rounded-full\";\n    const reportImg = document.createElement('img');\n    reportImg.src = \"/sf-images/default-source/giving-coach-ai/report.png?Status=Temp&sfvrsn=ad5a1c9f_2\";\n    reportActionsButton.appendChild(reportImg);\n    reportActionsButton.id=\"gb-message-actions-2-\"+newId +'-'+containterid\n    reportActionsButton.addEventListener('click', () => handleReport(newId,newId+'-'+containterid));\n    messageActionsDiv.appendChild(reportActionsButton);\n\n    botContainer.appendChild(messageActionsDiv);\n}\n\n\n\n\n\n\nexport function scrollToDiv(idname) {\n  const targetDiv = document.getElementById(idname);\n  targetDiv.scrollIntoView({ behavior: 'smooth', block: 'end' });\n}\n\nexport function mobileChat(){\n  var maximizeChat = document.getElementById(\"gb-maximize\");\n  var miniButton = document.getElementById(\"gb-miniButton\");\n  var miniChat = document.getElementById(\"gb-halfchat\");\n  var minimizeChat = document.getElementById(\"gb-minize\");\n  var isDragging = false;\n  var startY = 0;\n  //var isChatLoaded = false; // Flag to track if chat data has been loaded\n  // var initialHeight = 0;\n\n  maximizeChat.onclick = function() {\n    miniButton.classList.add(\"gb-hidden\");\n    miniChat.classList.remove(\"gb-hidden\");\n    miniChat.classList.add(\"gb-animate-slide-up\");\n   // Load data from session only if it hasn't been loaded before\n  //  if (!isChatLoaded) {\n  //   loadDataFromSession('gb-mobile');\n  //   isChatLoaded = true; // Set the flag to indicate that chat data has been loaded\n  // }\n  \n\n  };\n\n  minimizeChat.onclick = function() {\n    miniChat.classList.add(\"gb-animate-slide-down\");\n    setTimeout(function() {\n      miniChat.classList.add(\"gb-hidden\");\n      miniButton.classList.remove(\"gb-hidden\");\n      miniChat.classList.remove(\"gb-animate-slide-up\", \"gb-animate-slide-down\");\n      miniChat.style.height = \"\"; // Reset the height to its original value\n    }, 300);\n  };\n\n// Swipe functionality\nminiButton.addEventListener(\"touchstart\", function(event) {\n  isDragging = true;\n  startY = event.touches[0].clientY;\n});\n\nminiButton.addEventListener(\"touchmove\", function(event) {\n  if (!isDragging) return;\n\n  var deltaY = event.touches[0].clientY - startY;\n\n  if (deltaY < -50) {\n    // Swipe up, expand the chat\n    miniButton.classList.add(\"gb-hidden\");\n    miniChat.classList.remove(\"gb-hidden\");\n    miniChat.classList.add(\"gb-animate-slide-up\");\n    isDragging = false;\n  }\n});\n\nminiButton.addEventListener(\"touchend\", function() {\n  isDragging = false;\n});\n\n// Swipe functionality for minimizing the chat\nminiChat.addEventListener(\"touchstart\", function(event) {\n  isDragging = true;\n  startY = event.touches[0].clientY;\n});\n\nminiChat.addEventListener(\"touchmove\", function(event) {\n  if (!isDragging) return;\n\n  var deltaY = event.touches[0].clientY - startY;\n\n  if (deltaY > 50) {\n    // Swipe down, minimize the chat\n    miniChat.classList.add(\"gb-animate-slide-down\");\n    setTimeout(function() {\n      miniChat.classList.add(\"gb-hidden\");\n      miniButton.classList.remove(\"gb-hidden\");\n      miniChat.classList.remove(\"gb-animate-slide-up\", \"gb-animate-slide-down\");\n    }, 300);\n    isDragging = false;\n  }\n});\n\nminiChat.addEventListener(\"touchend\", function() {\n  isDragging = false;\n});\n}\n\n\n// FeedBack Modal\n\nexport function openModal (){\n  // Get modal element\nvar modal = document.getElementById(\"myModal\");\n// Get button that opens the modal\nvar btn = document.getElementById(\"gb-feedback\"); // You need to add this button in your HTML\n// Get the element that closes the modal\nvar closeModal = document.getElementById(\"closeModal\");\nvar closeButton = document.getElementById(\"closeButton\");\n\n// When the user clicks the button, open the modal \nbtn.onclick = function() {\n// console.log(\"click me\");\nmodal.classList.remove(\"gb-hidden\");\n}\n\n// When the user clicks on <span> (x), close the modal\ncloseModal.onclick = function() {\nmodal.classList.add(\"gb-hidden\");\n}\n\n// Also close when clicking the close button\ncloseButton.onclick = function() {\nmodal.classList.add(\"hidden\");\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\nif (event.target == modal) {\n  modal.classList.add(\"hidden\");\n}\n}\n}\n\n\n  // typing animation\n\n  async  function  typeword(currentText, wordIndex, id) {\n    for (let i = 0; i < currentText.length; i++) {\n      if (currentWordIndex !== wordIndex) return;\n      displayText = currentText.substr(0, i + 1);\n      // console.log(displayText);\n      //append text\n      //document.getElementById('gb-bot-loading').appendChild(document.createTextNode(displayText));\n    //  document.getElementById('gb-bot-loading').value = displayText;\n    document.getElementById('gb-chatbot-loading-'+id).innerHTML = displayText;\n      await sleepword(typingSpeed);\n    }\n  }\n  \n  async function deleteword(currentText, wordIndex, id) {\n    for (let i = currentText.length; i > 0; i--) {\n      if (currentWordIndex !== wordIndex) return;\n      displayText = currentText.substr(0, i - 1);\n      // document.getElementById('gb-bot-loading').appendChild(document.createTextNode(displayText));\n      // document.getElementById('gb-bot-loading').value = displayText;\n      document.getElementById('gb-chatbot-loading-'+id).innerHTML = displayText;\n      // console.log(displayText);\n      await sleepword(deletingSpeed);\n    }\n  }\n\n  async function sleepword(ms) {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(), ms);\n    });\n  }\n\n  export async function typewords (id='dfuy') {\n\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const currentText = words[currentWordIndex];\n      const wordIndex = currentWordIndex;\n      await typeword(currentText, wordIndex,id);\n      await sleepword(pauseDuration);\n      await deleteword(currentText, wordIndex,id);\n      await sleepword(pauseDuration);\n      currentWordIndex = (currentWordIndex + 1) % words.length;\n    }\n  }\n\n\n  // Function to store a value in the browser session with a specific name\nexport function storeValueInSession(name, value) {\n  sessionStorage.setItem(name, value);\n}\n\n// Function to read a value from the browser session with a specific name\nexport function readValueFromSession(name) {\n  return sessionStorage.getItem(name);\n}\n\n// Function to generate a UUID and store it in the browser session with a specific name\nexport function generateAndStoreUUID(name) {\n  const uuid = generateUUID();\n  storeValueInSession(name, uuid);\n  return uuid;\n}\n\nexport function removeSessionItem(name) {\n  sessionStorage.removeItem(name);\n}\n\n// Helper function to generate a UUID\nexport function generateUUID() {\n  const hexDigits = '0123456789abcdef';\n  let uuid = '';\n  \n  for (let i = 0; i < 36; i++) {\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\n      uuid += '-';\n    } else if (i === 14) {\n      uuid += '4';\n    } else {\n      uuid += hexDigits[Math.floor(Math.random() * 16)];\n    }\n  }\n  \n  return uuid;\n}\n\n\n\n\nexport function loadDataFromSession(id) {\n  const chatContainer = document.getElementById(id);\n\n  // Retrieve user message keys from session\nconst userMessageKeys = Object.keys(sessionStorage)\n  .filter(key => key.startsWith('user_message_'))\n  .sort((a, b) => {\n    const idA = parseInt(a.split('_')[2]);\n    const idB = parseInt(b.split('_')[2]);\n    return idA - idB;\n  });\n  // Iterate over user message keys\n  userMessageKeys.forEach(userKey => {\n    const messageId = userKey.split('_')[2];\n    const userMessage = readValueFromSession(userKey);\n\n    // Append user message\n    appendUserMessage(userMessage, messageId, id);\n\n    // Check if corresponding bot response exists\n    const botKey = `bot_response_${messageId}`;\n    if (sessionStorage.hasOwnProperty(botKey)) {\n      const botMessage = readValueFromSession(botKey);\n\n      // Append bot response\n      appendBotDiv(botMessage, messageId, id);\n      const botFlex = document.getElementById(\"botFlex-1-\" + messageId + '-' + id);\n      appendBotMessage(botFlex, messageId, id);\n\n      let messageParagraph = document.getElementById(messageId + \"-\" + id);\n      messageParagraph.innerHTML = window.marked.parse(botMessage);\n      botFlex.appendChild(messageParagraph);\n\n      document.getElementById('gb-chatbot-scrolldown-'+id).scrollIntoView({ behavior: 'smooth', block: 'end' });\n\n      const botRefer = document.createElement('div');\n      botRefer.id = \"botRef-1-\" + messageId+ \"-\"+id;\n      botRefer.className = \"gb-mt-2 gb-px-4 gb-flex gb-flex-wrap gb-gap-1\";\n      botFlex.appendChild(botRefer); \n\n      // Check if corresponding reference data exists\n      const referenceKey = `reference_data_${messageId}`;\n      if (sessionStorage.hasOwnProperty(referenceKey)) {\n        const referenceData = JSON.parse(readValueFromSession(referenceKey));\n        referenceData.forEach(data => {\n          // console.log(messageId);\n          // console.log(data);\n          appendReferences(messageId, data, id);\n        });\n        appendAction(messageId, id);\n      }\n    }\n  });\n\n  // Scroll to the bottom of the chat container\n  chatContainer.scrollTop = chatContainer.scrollHeight;\n}\n\nasync function handleRetry(id, containerid) {\n // console.log(id);\n  try {\n    const userMessage = readValueFromSession(`user_message_${id}`);\n    const nextMessage = readValueFromSession(`next_message_${id}`);\n\n    // Find the index of the clicked message\n    const clickedIndex = Array.from(document.querySelectorAll('[id^=\"gb-user-\"]'))\n      .findIndex(el => el.id === `gb-user-${containerid}`);\n\n    // Remove the user messages, bot responses, references, and actions for the clicked message and all messages after it\n    const userDivs = Array.from(document.querySelectorAll('[id^=\"gb-user-\"]')).slice(clickedIndex);\n    userDivs.forEach(userDiv => userDiv.remove());\n\n    const botDivs = Array.from(document.querySelectorAll('[id^=\"gb-bot-\"]')).slice(clickedIndex);\n    botDivs.forEach(botDiv => botDiv.remove());\n\n    // Remove the stored user messages, bot responses, and reference data from session for the clicked message and all messages after it\n    const userMessageKeys = Object.keys(sessionStorage)\n      .filter(key => key.startsWith('user_message_') && parseInt(key.split('_')[2]) >= id);\n    userMessageKeys.forEach(key => sessionStorage.removeItem(key));\n\n    const botResponseKeys = Object.keys(sessionStorage)\n      .filter(key => key.startsWith('bot_response_') && parseInt(key.split('_')[2]) >= id);\n    botResponseKeys.forEach(key => sessionStorage.removeItem(key));\n\n    const referenceDataKeys = Object.keys(sessionStorage)\n      .filter(key => key.startsWith('reference_data_') && parseInt(key.split('_')[2]) >= id);\n    referenceDataKeys.forEach(key => sessionStorage.removeItem(key));\n\n    // Call the makeRequest function with the user message and the clicked message ID\n    await makeRequest(userMessage, 'retry', nextMessage);\n  } catch (e) {\n    console.error('Error during retry:', e);\n  }\n}\n\n\nexport const LoadFAQs = ()=>{\n\nconst accordionContainer = document.querySelector('.gb-accordion');\nlet activeAccordionItem = null;\n// Generate accordion items\nFAQS.forEach((item, index)  => {\n  const accordionItem = document.createElement('div');\n  accordionItem.className = \"gb-accordion-item gb-rounded gb-bg-[#F6F4EE]\";\n  accordionItem.innerHTML = `\n    <button class=\"gb-accordion-header gb-w-full gb-flex gb-justify-between gb-items-center gb-p-4 gb-text-left gb-font-bold gb-text-black    focus:gb-outline-none\">\n      <span class=\"gb-text-[#000000] gb-font-medium gb-text-lg\">${item.question}</span>\n      <svg class=\"gb-w-5 gb-h-5 gb-text-black gb-transform gb-transition-transform gb-duration-200\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fill-rule=\"evenodd\" d=\"M6.293 6.293a1 1 0 011.414 0L10 8.586l2.293-2.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n      </svg>\n    </button>\n    <div class=\"gb-accordion-content gb-p-4 gb-text-gray-700 gb-hidden\">\n      <p class=\"gb-font-normal gb-text-base gb-text-[#000000]\">${item.answer}</p>\n    </div>\n  `;\n  accordionContainer.appendChild(accordionItem);\n\n   // Open the first accordion item by default\n   if (index === 0) {\n    accordionItem.classList.add('gb-active');\n    accordionItem.querySelector('.gb-accordion-content').classList.remove('gb-hidden');\n    accordionItem.querySelector('svg').classList.add('gb-rotate-180');\n    activeAccordionItem = accordionItem;\n  }\n\n});\n\n // Accordion functionality\n const accordionHeaders = document.querySelectorAll('.gb-accordion-header');\n accordionHeaders.forEach(header => {\n   header.addEventListener('click', () => {\n     const accordionItem = header.parentElement;\n     const accordionContent = accordionItem.querySelector('.gb-accordion-content');\n     const accordionIcon = header.querySelector('svg');\n\n     if (activeAccordionItem === accordionItem) {\n       // If the clicked accordion item is already active, close it\n       activeAccordionItem.classList.remove('gb-active');\n       accordionContent.classList.add('gb-hidden');\n       accordionIcon.classList.remove('gb-rotate-180');\n       activeAccordionItem = null;\n     } else {\n       // Close the previously active accordion item, if any\n       if (activeAccordionItem) {\n         activeAccordionItem.classList.remove('gb-active');\n         activeAccordionItem.querySelector('.gb-accordion-content').classList.add('hidden');\n         activeAccordionItem.querySelector('svg').classList.remove('rotate-180');\n       }\n\n       // Open the clicked accordion item\n       accordionItem.classList.add('gb-active');\n       accordionContent.classList.remove('gb-hidden');\n       accordionIcon.classList.add('gb-rotate-180');\n       activeAccordionItem = accordionItem;\n     }\n   });\n });\n}\n\n// export const faqshower = ()=>{\n//   const fullscreenDiv = document.querySelector('[data-page=\"halfscreen\"]');\n//   const faqDiv = document.getElementById('faq');\n//   const faqButton = document.getElementById('faqButton');\n//   const fullscreenButton = document.getElementById('fullscreenButton');\n  \n//   faqButton.addEventListener('click', () => {\n//     console.log(\"you clicked\");\n//     fullscreenDiv.classList.add('gb-transform', '-gb-translate-x-full', 'gb-transition-transform', 'gb-duration-500', 'gb-ease-in-out');\n//     fullscreenDiv.classList.remove('md:gb-flex');\n//     faqDiv.classList.remove('gb-hidden');\n//     faqDiv.classList.add('gb-transform', 'gb-translate-x-0', 'gb-transition-transform', 'gb-duration-500', 'gb-ease-in-out');\n//   });\n  \n//   fullscreenButton.addEventListener('click', () => {\n//     faqDiv.classList.add('gb-transform', 'gb-transition-transform', 'gb-duration-500', 'gb-ease-in-out');\n//     setTimeout(() => {\n//       faqDiv.classList.add('gb-hidden');\n//       fullscreenDiv.classList.add('md:gb-flex');\n//       fullscreenDiv.classList.remove('gb-transform', '-gb-translate-x-full');\n//     }, 500);\n//   });\n// }\n\n\n\n// Add event listeners for closing the modal\nconst closeModalButton = document.getElementById('closeModal');\ncloseModalButton.addEventListener('click', closeModal);\n\nconst closeButton = document.getElementById('closeButton');\ncloseButton.addEventListener('click', closeModal);\n\nfunction closeModal() {\n  const modal = document.getElementById('myModal');\n  modal.classList.add('gb-hidden');\n}\n\nfunction handleReport(id) {\n  const modal = document.getElementById('myModal');\n  modal.classList.remove('gb-hidden');\n  modal.setAttribute('data-message-id', id);\n}\n\nexport const ListentoModal = () => {\n  // Add event listener for submitting the form\nconst formBtn = document.getElementById('gb-modal-submit');\nformBtn.addEventListener('click', handleFormSubmit);\n}\n\n\n\nasync function handleFormSubmit(event) {\n  event.preventDefault();\n  // console.log(\"you clicke homescreen\");\n  const modal = document.getElementById('myModal');\n  const messageId = modal.getAttribute('data-message-id');\n  const formBtn = document.getElementById('gb-modal-submit')\n\n  const userMessage = readValueFromSession(`user_message_${messageId}`);\n  const botMessage = readValueFromSession(`bot_response_${messageId}`);\n  const nextMessage = readValueFromSession(`next_message_${messageId}`);\n\n  const feedback = document.querySelector('#myModal textarea[name=\"feedback\"]').value;\n    if(feedback.trim().length === 0){\n      alert('Please enter a feedback');\n      return;\n    }\n  const submitButton = formBtn\n  const initialButtonText = \"Submit\";\n  submitButton.disabled = true;\n  submitButton.textContent = 'Submitting...';\n\n\n  try {\n    // Send the report data to the server\n    const response = await fetch(BASEURL + '/response', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: readValueFromSession('username'),\n        message: userMessage,\n        chat_response: botMessage,\n        chat_session: readValueFromSession('chat_session'),\n        next_message: nextMessage,\n        feedback\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.ok) {\n      // Report submitted successfully\n     // console.log('Report submitted successfully');\n      alert('Report submitted successfully');\n      closeModal();\n    } else {\n      // Handle error response\n      console.error('Error submitting report:', response.statusText);\n    }\n  } catch (error) {\n    console.error('Error submitting report:', error);\n  }finally {\n    submitButton.disabled = false;\n    submitButton.textContent = initialButtonText;\n  }\n}\n\nexport function getBaseURL(url) {\n  try {\n    const urlObj = new URL(url);\n    return urlObj.origin;\n  } catch (error) {\n    console.error('Invalid URL:', error);\n    return null;\n  }\n}"],"names":["BASEURL","FAQS","question","answer","abortController","AbortController","next_session","containterid","initHomePage","window","addEventListener","checkViewMode","gbForm","document","getElementById","gbSubmitBtn","gbTextarea","querySelector","async","event","preventDefault","inputText","value","disabled","makeRequest","onclick","e","resetChat","message","route","next_message","trim","length","alert","setLoader","scrollIntoView","behavior","block","newId","Date","now","toString","response","fetch","method","body","JSON","stringify","chat_session","username","headers","signal","ok","json","text","Error","data","reader","pipeThrough","TextDecoderStream","getReader","botResponseText","botFlex","done","read","botRefer","createElement","className","id","appendChild","makeReference","messageParagraph","innerHTML","marked","parse","error","console","log","name","userprompt","dataresp","output","next_node","searchDatas","queries","Object","keys","url","formattedData","map","_","index","title","content","date","sessionStorage","filter","key","startsWith","forEach","removeItem","location","reload","on","gbloader","gbsubbutton","gbbuttonloader","classList","remove","add","displayText","words","currentWordIndex","typingSpeed","deletingSpeed","pauseDuration","appendUserMessage","chatContainer","userDiv","textContent","appendBotDiv","botDiv","img","src","appendBotMessage","appendReferences","botContainer","referenceLink","href","target","spanLink","referenceImg","width","height","referenceText","appendAction","messageActionsDiv","reloadActionsButton","reloadImg","containerid","userMessage","readValueFromSession","nextMessage","clickedIndex","Array","from","querySelectorAll","findIndex","el","slice","parseInt","split","handleRetry","reportActionsButton","reportImg","modal","setAttribute","handleReport","scrollToDiv","idname","mobileChat","maximizeChat","miniButton","miniChat","minimizeChat","isDragging","startY","setTimeout","style","touches","clientY","typeword","currentText","wordIndex","i","substr","sleepword","deleteword","ms","Promise","resolve","typewords","storeValueInSession","setItem","getItem","generateAndStoreUUID","uuid","hexDigits","Math","floor","random","generateUUID","loadDataFromSession","sort","a","b","userKey","messageId","botKey","hasOwnProperty","botMessage","referenceKey","scrollTop","scrollHeight","LoadFAQs","accordionContainer","activeAccordionItem","item","accordionItem","header","parentElement","accordionContent","accordionIcon","closeModal","ListentoModal","handleFormSubmit","getAttribute","formBtn","feedback","submitButton","chat_response","statusText"],"sourceRoot":""}